---
name: CI

"on":
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest]
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~\AppData\Local\pip\Cache
          key: >-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock
          pip install -e .
      - name: Ruff
        run: ruff check .
      - name: Mypy
        run: mypy
      - name: Pytest
        run: pytest
      - name: Build package
        run: python -m build
      
      - name: Smoke test - Version check
        run: |
          echo "Testing dji-embed --version"
          dji-embed --version
          
      - name: Smoke test - Doctor command  
        run: |
          echo "Testing dji-embed doctor (expect dependency warnings)"
          dji-embed doctor || true
          
      - name: Smoke test - Check command with samples
        run: |
          echo "Testing dji-embed check with sample files"
          dji-embed check examples/DJI_sample.SRT
          dji-embed check samples/mini4pro/clip.SRT
          dji-embed check samples/avata2/clip.SRT
          dji-embed check samples/air3/clip.SRT
          
      - name: Smoke test - Convert command
        run: |
          echo "Testing dji-embed convert functionality"
          dji-embed convert gpx examples/DJI_sample.SRT -o test_smoke.gpx
          dji-embed convert csv examples/DJI_sample.SRT -o test_smoke.csv
          ls -la test_smoke.*
